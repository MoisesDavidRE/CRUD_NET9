@page "/asistencia"
@page "/asistencia/{idAsistenciaEditar:int}"

@using CompartirDatos;
@using Blazor_CRUD.Services;

@inject IUsuarioService usuarioService;
@inject IAsistenciasService asistenciaService;
@inject NavigationManager navegacion;

<h3>@titulo</h3>

<EditForm Model="asistencia" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Usuario</label>
        <InputSelect @bind-Value="asistencia.UsuarioId" class="form-select">
            <option value="">Seleccione un usuario</option>
            @foreach (var usuario in listaUsuarios)
            {
                <option value="@usuario.Id">@usuario.Nombre</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => asistencia.UsuarioId)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Fecha</label>
        <InputDate @bind-Value="asistencia.Fecha" class="form-control" />
        <ValidationMessage For="@(() => asistencia.Fecha)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Estatus</label>
        <InputSelect @bind-Value="asistencia.Presente" class="form-select">
            <option value="true">Presente</option>
            <option value="false">Ausente</option>
        </InputSelect>
        <ValidationMessage For="@(() => asistencia.Presente)" />
    </div>

    <button class="btn btn-primary" type="submit">
        @btnTexto
    </button>

    <a class="btn btn-warning" href="asistencias">Volver</a>
</EditForm>

@code {
    [Parameter]
    public int idAsistenciaEditar { get; set; } = 0;

    private CompartirDatos.Asistencia asistencia = new CompartirDatos.Asistencia();
    private List<CompartirDatos.Usuario> listaUsuarios = new List<CompartirDatos.Usuario>();
    private string titulo = "Registrar Asistencia";
    private string btnTexto = "Guardar Asistencia";

    protected override async Task OnInitializedAsync()
    {
        listaUsuarios = await usuarioService.Lista();

        if (idAsistenciaEditar != 0)
        {
            asistencia = await asistenciaService.Buscar(idAsistenciaEditar);
            btnTexto = "Actualizar Asistencia";
            titulo = "Editar Asistencia";
        }
        else
        {
            asistencia.Fecha = DateTime.Today;
        }
    }

    private async Task OnValidSubmit()
    {
        if (idAsistenciaEditar == 0)
        {
            var resultado = await asistenciaService.Guardar(asistencia);
        }
        else
        {
            var resultado = await asistenciaService.Editar(asistencia);
        }

        navegacion.NavigateTo("/asistencias");
    }
}