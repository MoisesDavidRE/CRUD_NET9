@page "/usuario"
@page "/usuario/{idUsuarioEditar:int}"


@using CompartirDatos;
@using Blazor_CRUD.Services;

@inject IUsuarioService usuarioService;
@inject IAsistenciasService asistenciaService;
@inject NavigationManager navegacion;


<h3>@titulo</h3>

<EditForm Model="usr" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

     <div class="mb-3"> 
        <label class="form-label">Nombre Completo</label> 
         <InputText class="form-control" @bind-Value="usr.Nombre"></InputText> 
         <ValidationMessage For="@(() => usr.Nombre)"></ValidationMessage> 
     </div>

     <div class="mb-3"> 
        <label class="form-label">Correo</label> 
         <InputText Type="email" class="form-control" @bind-Value="usr.Correo"></InputText> 
         <ValidationMessage For="@(() => usr.Correo)"></ValidationMessage> 
     </div>

     <div class="mb-3"> 
        <label class="form-label">Contraseña</label>
        <InputText Type="password" class="form-control" @bind-Value="usr.Contrasena">usr.Contrasena</InputText>
        <ValidationMessage For="@(() => usr.Contrasena)"></ValidationMessage> 
     </div>
    <div class="mb-3">
        <label class="form-label">Rol</label>
        <InputSelect class="form-select" @bind-Value="usr.Rol">
            <option value="usuario">Usuario</option>
            <option disabled value="admin">Admin</option>
        </InputSelect>
        <ValidationMessage For="@(() => usr.Rol)"></ValidationMessage>
    </div>

 
     

     <button class="btn btn-primary" type="submit">
         @btnTexto 
     </button> 

    <a class="btn btn-warning" href="usuarios">Volver</a> 
</EditForm>

@code {
    [Parameter]
    public int idUsuarioEditar { get; set; } = 0;


    string titulo = string.Empty;
    string btnTexto = string.Empty;

    CompartirDatos.Usuario usr = new CompartirDatos.Usuario();

    protected override async Task OnInitializedAsync()
    {
        if (idUsuarioEditar != 0)
        {
            usr = await usuarioService.Buscar(idUsuarioEditar);
            btnTexto = "Actualizar Usuario";
            titulo = "Editar Usuario";
        }
        else
        {
            usr.FechaRegistro = DateTime.Today;
            btnTexto = "Guardar Usuario";
            titulo = "Nuevo Usuario";
        }
    }

    private async Task OnValidSubmit()
    {
        int idDevuelto = 0;
        if (idUsuarioEditar == 0)
            idDevuelto = await usuarioService.Guardar(usr);
        else
            idDevuelto = await usuarioService.Editar(usr);


        if (idDevuelto != 0)
            navegacion.NavigateTo("/usuarios");

    }


}