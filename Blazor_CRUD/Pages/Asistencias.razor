@page "/asistencias"

@using CompartirDatos;
@using CurrieTechnologies.Razor.SweetAlert2;
@using Blazor_CRUD.Services;

@inject SweetAlertService Swal;
@inject IAsistenciasService asistenciaService;
@inject IUsuarioService usuarioService;

<h3>Asistencias</h3>

<a class="btn btn-success btn-sm mb-3" href="asistencia">Registrar asistencia</a>

<table class="table">
    <thead>
        <tr>
            <th>Usuario</th>
            <th>Fecha de registro</th>
            <th>Estatus</th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @if (listaAsistencias == null)
        {
            <tr>
                <td colspan="4" align="center">
                    <img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                </td>
            </tr>
        }
        else
        {
            foreach (var item in listaAsistencias)
            {
                var nombreUsuario = nombresUsuarios.ContainsKey(item.UsuarioId) ? nombresUsuarios[item.UsuarioId] : "Desconocido";

                <tr>
                    <td>@nombreUsuario</td>
                    <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                    <td>@(item.Presente == true ? "Presente" : "Ausente")</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="asistencia/@item.Id">
                            Editar
                        </a>
                    </td>
                </tr>
            }
        }

    </tbody>
</table>

@code {
    List<CompartirDatos.Asistencia>? listaAsistencias = null;
    Dictionary<int, string> nombresUsuarios = new Dictionary<int, string>();

    protected override async Task OnInitializedAsync()
    {
        listaAsistencias = await asistenciaService.Lista();
        var usuarios = await usuarioService.Lista();
        foreach (var usuario in usuarios)
        {
            nombresUsuarios[usuario.Id] = usuario.Nombre;
        }
    }
}